{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"ember-concurrency-retryable","attributes":{"name":"ember-concurrency-retryable","version":"0.5.0","navigationIndex":[{"type":"classes","items":[{"id":"ember-concurrency-retryable/policies/delay~DelayPolicy","path":"modules/ember-concurrency-retryable/policies/delay~DelayPolicy","name":"DelayPolicy"},{"id":"ember-concurrency-retryable/policies/exponential-backoff~ExponentialBackoffPolicy","path":"modules/ember-concurrency-retryable/policies/exponential-backoff~ExponentialBackoffPolicy","name":"ExponentialBackoffPolicy"},{"id":"ember-concurrency-retryable/policies/base~Policy","path":"modules/ember-concurrency-retryable/policies/base~Policy","name":"Policy"},{"id":"ember-concurrency-retryable/-private/retryable-task-instance~RetryableTaskInstance","path":"modules/ember-concurrency-retryable/-private/retryable-task-instance~RetryableTaskInstance","name":"RetryableTaskInstance"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"ember-concurrency-retryable/-private/retryable-task-instance"},{"type":"module","id":"ember-concurrency-retryable/policies/base"},{"type":"module","id":"ember-concurrency-retryable/policies/delay"},{"type":"module","id":"ember-concurrency-retryable/policies/exponential-backoff"}]}}},"included":[{"type":"class","id":"ember-concurrency-retryable/-private/retryable-task-instance~RetryableTaskInstance","attributes":{"name":"RetryableTaskInstance","file":"ember-concurrency-retryable/-private/retryable-task-instance","description":"<div class=\"docs-md\"><p>RetryableTaskInstance contains state related to the retrying\nof a task instance. It is provided as an argument to retry\npolicy hooks and ember-concurrency-retryable lifecycle events.</p></div>","lineNumber":6,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[{"name":"retryCount","file":"ember-concurrency-retryable/-private/retryable-task-instance","description":"<div class=\"docs-md\"><p>Number of times the task instance has been retried</p></div>","lineNumber":32,"access":"public","tags":[{"name":"readonly","value":""}],"type":"number","defaultValue":"0","isStatic":false,"decorators":[]},{"name":"lastError","file":"ember-concurrency-retryable/-private/retryable-task-instance","description":"<div class=\"docs-md\"><p>The last error that triggered a retry of the task instance</p></div>","lineNumber":41,"access":"public","tags":[{"name":"readonly","value":""}],"type":"Error?","isStatic":false,"decorators":[]},{"name":"taskInstance","file":"ember-concurrency-retryable/-private/retryable-task-instance","description":"<div class=\"docs-md\"><p>ember-concurrency TaskInstance for the RetryableTaskInstance</p></div>","lineNumber":49,"access":"public","tags":[{"name":"readonly","value":""}],"type":"TaskInstance?","isStatic":false,"decorators":[]}],"methods":[],"accessors":[],"parentClassId":null},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-concurrency-retryable/-private/retryable-task-instance","attributes":{"file":"ember-concurrency-retryable/-private/retryable-task-instance","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-concurrency-retryable/-private/retryable-task-instance~RetryableTaskInstance"}]},"components":{"data":[]}}},{"type":"class","id":"ember-concurrency-retryable/policies/base~Policy","attributes":{"name":"Policy","file":"ember-concurrency-retryable/policies/base","description":"<div class=\"docs-md\"><p>Policy base class for implementing retry policies. Provides\nno functionality of its own, other than a <code>retry</code> implementation\nthat ensures the correct events fire.</p></div>","lineNumber":1,"access":"public","tags":[{"name":"is_constructor","value":1}],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[{"name":"didError","file":"ember-concurrency-retryable/policies/base","description":"<div class=\"docs-md\"><p>Hook which is called when a task instance errors but has\nnot yet been been checked against the policy for retry.</p></div>","lineNumber":10,"access":"public","tags":[{"name":"since","value":"0.3.1"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"shouldRetry","file":"ember-concurrency-retryable/policies/base","description":"<div class=\"docs-md\"><p>Returns a boolean indicating whether or not the task instance\nshould be retried following an error thrown by the original\ntask instance generator function.</p></div>","lineNumber":22,"access":"public","tags":[],"returns":{"type":"boolean","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"willRetry","file":"ember-concurrency-retryable/policies/base","description":"<div class=\"docs-md\"><p>Hook that is called before the task is passed to the policy\nfor retrying.</p></div>","lineNumber":34,"access":"public","tags":[{"name":"since","value":"0.3.0"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"retry","file":"ember-concurrency-retryable/policies/base","description":"<div class=\"docs-md\"><p>Defines how the policy retries the task instance.</p></div>","lineNumber":46,"access":"public","tags":[],"returns":{"type":"IterableIterator<any>","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"didRetry","file":"ember-concurrency-retryable/policies/base","description":"<div class=\"docs-md\"><p>Hook that is called after a task has been successfully retried.</p></div>","lineNumber":58,"access":"public","tags":[{"name":"since","value":"0.3.1"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]}],"accessors":[],"parentClassId":null},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-concurrency-retryable/policies/base","attributes":{"file":"ember-concurrency-retryable/policies/base","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-concurrency-retryable/policies/base~Policy"}]},"components":{"data":[]}}},{"type":"class","id":"ember-concurrency-retryable/policies/delay~DelayPolicy","attributes":{"name":"DelayPolicy","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Flexible delaying retry policy that allows for specifying the\ndelays and allowing for retrying on specfic errors.</p></div>","lineNumber":7,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[{"name":"constructor","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Constructor for DelayPolicy</p></div>","lineNumber":15,"access":"public","tags":[{"name":"is_constructor","value":1}],"returns":null,"params":[{"name":"options","type":"object","description":"Options used for the policy"},{"name":"options.delay","type":"Array<number>","description":"Array of numbers representing milliseconds to delay"},{"name":"options.reasons","type":"Array<Error>","description":"Array of potentially caught errors which should trigger task retries"}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"shouldRetry","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Returns a boolean indicating whether or not the task instance\nshould be retried following an error thrown by the original\ntask instance generator function.</p></div>","lineNumber":33,"access":"public","tags":[],"returns":{"type":"boolean","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"retry","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Retries the task instance, delaying for the next millisecond duration\nspecified by the policy.</p></div>","lineNumber":61,"access":"public","tags":[],"returns":{"type":"IterableIterator<any>","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"didError","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Hook which is called when a task instance errors but has\nnot yet been been checked against the policy for retry.</p></div>","lineNumber":79,"access":"public","tags":[{"name":"since","value":"0.3.1"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"willRetry","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Hook that is called before the task is passed to the policy\nfor retrying.</p></div>","lineNumber":90,"access":"public","tags":[{"name":"since","value":"0.3.0"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"didRetry","file":"ember-concurrency-retryable/policies/delay","description":"<div class=\"docs-md\"><p>Hook that is called after a task has been successfully retried.</p></div>","lineNumber":101,"access":"public","tags":[{"name":"since","value":"0.3.1"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]}],"accessors":[],"parentClassId":"ember-concurrency-retryable/policies/base~Policy"},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-concurrency-retryable/policies/delay","attributes":{"file":"ember-concurrency-retryable/policies/delay","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-concurrency-retryable/policies/delay~DelayPolicy"}]},"components":{"data":[]}}},{"type":"class","id":"ember-concurrency-retryable/policies/exponential-backoff~ExponentialBackoffPolicy","attributes":{"name":"ExponentialBackoffPolicy","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Multiplying policy that increases the delay with every retry</p></div>","lineNumber":18,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[{"name":"constructor","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Constructor for ExponentialBackoffPolicy</p></div>","lineNumber":25,"access":"public","tags":[{"name":"is_constructor","value":1}],"returns":null,"params":[{"name":"options","type":"object","description":"Options used for the policy"},{"name":"options.multiplier","type":"number","description":"Multiplier used to increse the duration after each try"},{"name":"options.minDelay","type":"number","description":"Minimum delay duration (in milliseconds)"},{"name":"options.maxDelay","type":"number","description":"Maximum delay duration (in milliseconds)"}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"didError","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Hook which is called when a task instance errors but has\nnot yet been been checked against the policy for retry.</p></div>","lineNumber":44,"access":"public","tags":[{"name":"since","value":"0.3.1"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"shouldRetry","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Returns a boolean indicating whether or not the task instance\nshould be retried following an error thrown by the original\ntask instance generator function.</p></div>","lineNumber":55,"access":"public","tags":[],"returns":{"type":"boolean","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"willRetry","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Hook that is called before the task is passed to the policy\nfor retrying.</p></div>","lineNumber":66,"access":"public","tags":[{"name":"since","value":"0.3.0"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""},{"name":"error","type":"Error","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"retry","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Retries the task instance, delaying for the next millisecond duration\nspecified by the policy.</p></div>","lineNumber":77,"access":"public","tags":[],"returns":{"type":"IterableIterator<any>","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"didRetry","file":"ember-concurrency-retryable/policies/exponential-backoff","description":"<div class=\"docs-md\"><p>Hook that is called after a task has been successfully retried.</p></div>","lineNumber":86,"access":"public","tags":[{"name":"since","value":"0.3.1"}],"returns":{"type":"void","description":"","properties":[]},"params":[{"name":"retryInstance","type":"RetryableTaskInstance","description":""}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]}],"accessors":[],"parentClassId":"ember-concurrency-retryable/policies/delay~DelayPolicy"},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-concurrency-retryable/policies/exponential-backoff","attributes":{"file":"ember-concurrency-retryable/policies/exponential-backoff","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"ember-concurrency-retryable/policies/exponential-backoff~ExponentialBackoffPolicy"}]},"components":{"data":[]}}}]}
